@model LoginView
@{
    ViewData["Title"] = "Reset Password - SmartAdmin";

    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>@ViewData["Title"]</title>

    <link rel="stylesheet" href="~/lib/core/core.css">
    <link rel="stylesheet" href="~/fonts/feather-font/css/iconfont.css">
    <link rel="stylesheet" href="~/css/style.css">

    <link rel="stylesheet" href="~/custom-css/header.css" asp-append-version="true">
    <link rel="stylesheet" href="~/custom-css/html.css" asp-append-version="true">
    <link rel="stylesheet" href="~/custom-css/sidebar.css" asp-append-version="true">

    <link rel="shortcut icon" href="~/favicon.ico" />
</head>
<body class="sidebar-dark">
    <div class="main-wrapper">
        <div class="page-wrapper full-page">
            <div class="page-content d-flex align-items-center justify-content-center">

                <div class="row w-100 mx-0 auth-page">
                    <div class="col-md-8 col-xl-6 mx-auto">
                        <div class="card p-md-3">
                            <div class="row">

                                <div class="col-md-12 pl-md-0">
                                    <div class="auth-form-wrapper px-4 py-5">
                                        <a href="#" class="noble-ui-logo d-block mb-2">
                                            @*<img src="~/images/logo.png" />*@
                                            @*World<span>POS</span>*@
                                        </a>
                                        <h5 class="text-muted font-weight-normal mb-4">Enter your new password here</h5>
                                        @using (Html.BeginForm("ResetPassword", "Account", FormMethod.Post, new { @class = "forms-sample" }))
                                        {
                                            @Html.AntiForgeryToken()

                                            <div class="mt-2 alert alert-danger  @(ViewData["ErrorMessage"] == null ? "d-none" : "")">
                                                @(ViewData["ErrorMessage"])
                                            </div>
                                            <div class="mt-2 alert alert-success  @(ViewData["SuccessMessage"] == null ? "d-none" : "")">
                                                @(ViewData["SuccessMessage"])
                                            </div>

                                            <div class="form-group">
                                                @Html.LabelFor(model => model.Password)
                                                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", placeholder = "New password", autofocus = "autofocus" } })
                                                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                                            </div>

                                            <div class="form-group">
                                                @Html.LabelFor(model => model.ConfirmPassword)
                                                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control", placeholder = "Confirm Password" } })
                                                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                                            </div>

                                            <div class="form-group d-none">
                                                @Html.LabelFor(model => model.UserID)
                                                @Html.EditorFor(model => model.UserID, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.UserID, "", new { @class = "text-danger" })
                                            </div>

                                            <div class="form-group d-none">
                                                @Html.LabelFor(model => model.TokenID)
                                                @Html.EditorFor(model => model.TokenID, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.TokenID, "", new { @class = "text-danger" })
                                            </div>

                                            <div class="mt-3">
                                                <input type="submit" value="Reset" class="btn btn-dark mr-2 mb-2 mb-md-0 text-white" />
                                            </div>

                                            <a href="~/Account/Login" class="d-block mt-3 text-muted">Cancel password reset</a>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>

    <script src="~/lib/core/core.js"></script>
    <script src="~/lib/feather-icons/feather.min.js"></script>
    <script src="~/js/template.js"></script>

    <script src="~/js/custom.js" asp-append-version="true"></script>

    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
</body>
</html>


