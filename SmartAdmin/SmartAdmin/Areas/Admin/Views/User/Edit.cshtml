@model User
@{
    ViewData["Title"] = "Edit User";

    ViewData["UserActive"] = "active";

}

@inject DropDown.ICommonDDL CommonDDL

<partial name="_SelectData" />

<!-- start page title -->
<div class="row">
    <div class="col-12">
        <div class="page-title-box">
            <h4 class="page-title">@ViewData["Title"]</h4>
        </div>
    </div>
</div>
<!-- end page title -->

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="row">
        <div class="col-md-6 grid-margin">
            <div class="card">
                <div class="card-body">

                    <div class="form-group row d-none">
                        @Html.LabelFor(model => model.ReturnURL, htmlAttributes: new { @class = "col-4 col-form-label" })
                        <div class="col-8">
                            @Html.EditorFor(model => model.ReturnURL, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ReturnURL, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row d-none">
                        @Html.LabelFor(model => model.UserID, htmlAttributes: new { @class = "col-4 col-form-label" })
                        <div class="col-8">
                            @Html.EditorFor(model => model.UserID, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.UserID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "col-4 col-form-label" })
                        <div class="col-8">
                            @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        <div class="col-4"></div>
                        <div class="col-8">
                            <input type="checkbox" id="chkPassword" />
                            <label for="chkPassword">Reset password</label>
                        </div>
                    </div>

                    <div id="grpPassword" class="form-group row d-none">
                        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "col-4 col-form-label" })
                        <div class="col-8">
                            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.DisplayName, htmlAttributes: new { @class = "col-4 col-form-label" })
                        <div class="col-8">
                            @Html.EditorFor(model => model.DisplayName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.DisplayName, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    <div class="form-group row">
                        @Html.LabelFor(model => model.EmailAddress, htmlAttributes: new { @class = "col-4 col-form-label" })
                        <div class="col-8">
                            @Html.EditorFor(model => model.EmailAddress, new { htmlAttributes = new { @class = "form-control"} })
                            @Html.ValidationMessageFor(model => model.EmailAddress, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.ActiveStatusBool, htmlAttributes: new { @class = "col-4 col-form-label" })
                        <div class="col-8 pt-2">
                            <div class="custom-control custom-switch">
                                @Html.CheckBoxFor(m => m.ActiveStatusBool, new { @class = "custom-control-input checkbox-success", id = "customSwitch1" })
                                <label class="custom-control-label" for="customSwitch1">Active</label>
                            </div>
                        </div>
                    </div>

                </div>
            </div>


        </div>

    </div>

    <div class="row mt-2 ">

        <div class="col-md-12 justify-content-center">

            <button type="submit" class="btn btn-primary mr-2">Update</button>

            <a class="mt-2" href="@Model.ReturnURL">Cancel</a>


        </div>
    </div>

}
@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }

    <script>

        $(document).ready(function () {

        });

        $("#chkPassword").change(function () {
            if (this.checked) {
                $("#grpPassword").removeClass("d-none");
            }
            else {
                $("#grpPassword").addClass("d-none");
            }
        });

    </script>

}



