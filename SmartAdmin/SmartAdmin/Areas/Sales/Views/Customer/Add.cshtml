@model Customer
@{
    ViewData["Title"] = "Add Customer";

    ViewData["SalesParameterActive"] = "active";
    ViewData["SalesParameterShow"] = "show";
    ViewData["CustomerActive"] = "active";
}

@inject DropDown.ICommonDDL CommonDDL
@inject DropDown.ISalesDDL SalesDDL

<partial name="_SelectData" />

<!-- start page title -->
<div class="row">
    <div class="col-12">
        <div class="page-title-box">
            <h4 class="page-title">@ViewData["Title"]</h4>
        </div>
    </div>
</div>
<!-- end page title -->

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="row">
        <div class="col-md-6 grid-margin">
            <div class="card">
                <div class="card-body">

                    <div class="form-group row d-none">
                        @Html.LabelFor(model => model.ReturnURL, htmlAttributes: new { @class = "col-4 col-form-label" })
                        <div class="col-8">
                            @Html.EditorFor(model => model.ReturnURL, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ReturnURL, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row d-none">
                        @Html.LabelFor(model => model.CustomerID, htmlAttributes: new { @class = "col-4 col-form-label" })
                        <div class="col-8">
                            @Html.EditorFor(model => model.CustomerID, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CustomerID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row d-none">
                        @Html.LabelFor(model => model.FacebookID, htmlAttributes: new { @class = "col-4 col-form-label" })
                        <div class="col-8">
                            @Html.EditorFor(model => model.FacebookID, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.FacebookID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row d-none">
                        @Html.LabelFor(model => model.GoogleID, htmlAttributes: new { @class = "col-4 col-form-label" })
                        <div class="col-8">
                            @Html.EditorFor(model => model.GoogleID, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.GoogleID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.CustomerCategoryID, htmlAttributes: new { @class = "col-4 col-form-label" })
                        <div class="col-8">
                            @Html.DropDownList("CustomerCategoryID", await SalesDDL.CustomerCategoryList(), "(Please select)", htmlAttributes: new { @class = "form-control", data_toggle = "select2" })
                            @Html.ValidationMessageFor(model => model.CustomerCategoryID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.CustomerGroupID, htmlAttributes: new { @class = "col-4 col-form-label" })
                        <div class="col-8">
                            @Html.DropDownList("CustomerGroupID", await SalesDDL.CustomerGroupList(), "(Not assigned)", htmlAttributes: new { @class = "form-control", data_toggle = "select2" })
                            @Html.ValidationMessageFor(model => model.CustomerGroupID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.PriceType, htmlAttributes: new { @class = "col-4 col-form-label" })
                        <div class="col-8">
                            @Html.DropDownList("PriceType", CommonDDL.PriceTypeList(), htmlAttributes: new { @class = "form-control", data_toggle = "select2" })
                            @Html.ValidationMessageFor(model => model.PriceType, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.Salutation, htmlAttributes: new { @class = "col-4 col-form-label" })
                        <div class="col-8">
                            @Html.DropDownList("Salutation", CommonDDL.SalutationList(), htmlAttributes: new { @class = "form-control", data_toggle = "select2" })
                            @Html.ValidationMessageFor(model => model.Salutation, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "col-4 col-form-label" })
                        <div class="col-8">
                            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", autofocus = "autofocus" } })
                            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.MiddleName, htmlAttributes: new { @class = "col-4 col-form-label" })
                        <div class="col-8">
                            @Html.EditorFor(model => model.MiddleName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.MiddleName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "col-4 col-form-label" })
                        <div class="col-8">
                            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.CompanyName, htmlAttributes: new { @class = "col-4 col-form-label" })
                        <div class="col-8">
                            @Html.EditorFor(model => model.CompanyName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CompanyName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.TelephoneMobile, htmlAttributes: new { @class = "col-4 col-form-label" })
                        <div class="col-8">
                            @Html.EditorFor(model => model.TelephoneMobile, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.TelephoneMobile, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.TelephoneOther, htmlAttributes: new { @class = "col-4 col-form-label" })
                        <div class="col-8">
                            @Html.EditorFor(model => model.TelephoneOther, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.TelephoneOther, "", new { @class = "text-danger" })
                        </div>
                    </div>

                </div>
            </div>

            <div class="card">
                <div class="card-body">
                    <h6 class="text-primary mb-3">Other</h6>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.LoginEmail, htmlAttributes: new { @class = "col-4 col-form-label" })
                        <div class="col-8">
                            @Html.EditorFor(model => model.LoginEmail, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.LoginEmail, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.LoginPassword, htmlAttributes: new { @class = "col-4 col-form-label" })
                        <div class="col-8">
                            @Html.EditorFor(model => model.LoginPassword, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.LoginPassword, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.Remarks, htmlAttributes: new { @class = "col-4 col-form-label" })
                        <div class="col-8">
                            @Html.TextAreaFor(model => model.Remarks, 3, 120, htmlAttributes: new { @class = "form-control", style = "width: 100%; max-width: 100%;" })
                            @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.ActiveStatusBool, htmlAttributes: new { @class = "col-4 col-form-label" })
                        <div class="col-8 pt-2">
                            <div class="custom-control custom-switch">
                                @Html.CheckBoxFor(m => m.ActiveStatusBool, new { @class = "custom-control-input checkbox-success", id = "customSwitch1" })
                                <label class="custom-control-label" for="customSwitch1">Active</label>
                            </div>
                        </div>
                    </div>

                </div>
            </div>


        </div>

        <div class="col-md-6 grid-margin">
            <div class="card">
                <div class="card-body">

                    <h6 class="text-primary mb-3">Billing Address</h6>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.AddressLine1, htmlAttributes: new { @class = "col-4 col-form-label" })
                        <div class="col-8">
                            @Html.EditorFor(model => model.AddressLine1, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.AddressLine1, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.AddressLine2, htmlAttributes: new { @class = "col-4 col-form-label" })
                        <div class="col-8">
                            @Html.EditorFor(model => model.AddressLine2, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.AddressLine2, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "col-4 col-form-label" })
                        <div class="col-8">
                            @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "col-4 col-form-label" })
                        <div class="col-8">
                            @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.PostalCode, htmlAttributes: new { @class = "col-4 col-form-label" })
                        <div class="col-8">
                            @Html.EditorFor(model => model.PostalCode, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PostalCode, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "col-4 col-form-label" })
                        <div class="col-8">
                            @Html.DropDownList("Country", await SalesDDL.CountryList(), "(Please select)", htmlAttributes: new { @class = "form-control", data_toggle = "select2" })
                            @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.ShipAwayBool, htmlAttributes: new { @class = "col-4 col-form-label" })
                        <div class="col-8 pt-2">
                            <div class="custom-control custom-switch">
                                @Html.CheckBoxFor(m => m.ShipAwayBool, new { @class = "custom-control-input checkbox-success", id = "chkShipAwayBool" })
                                <label class="custom-control-label" for="chkShipAwayBool">Ship to different address</label>
                            </div>
                        </div>
                    </div>


                </div>
            </div>

            <div class="card" id="grpShipping">
                <div class="card-body">
                    <h6 class="text-primary mb-3">Shipping Address</h6>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.ShipAttTo, htmlAttributes: new { @class = "col-4 col-form-label" })
                        <div class="col-8">
                            @Html.EditorFor(model => model.ShipAttTo, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ShipAttTo, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.ShipAddressLine1, htmlAttributes: new { @class = "col-4 col-form-label" })
                        <div class="col-8">
                            @Html.EditorFor(model => model.ShipAddressLine1, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ShipAddressLine1, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.ShipAddressLine2, htmlAttributes: new { @class = "col-4 col-form-label" })
                        <div class="col-8">
                            @Html.EditorFor(model => model.ShipAddressLine2, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ShipAddressLine2, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.ShipCity, htmlAttributes: new { @class = "col-4 col-form-label" })
                        <div class="col-8">
                            @Html.EditorFor(model => model.ShipCity, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ShipCity, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.ShipState, htmlAttributes: new { @class = "col-4 col-form-label" })
                        <div class="col-8">
                            @Html.EditorFor(model => model.ShipState, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ShipState, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.ShipPostalCode, htmlAttributes: new { @class = "col-4 col-form-label" })
                        <div class="col-8">
                            @Html.EditorFor(model => model.ShipPostalCode, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ShipPostalCode, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.ShipCountry, htmlAttributes: new { @class = "col-4 col-form-label" })
                        <div class="col-8">
                            @Html.DropDownList("ShipCountry", await SalesDDL.CountryList(), "(Please select)", htmlAttributes: new { @class = "form-control", data_toggle = "select2" })
                            @Html.ValidationMessageFor(model => model.ShipCountry, "", new { @class = "text-danger" })
                        </div>
                    </div>

                </div>
            </div>


        </div>
    </div>

    <div class="row mt-2 ">

        <div class="col-md-12 justify-content-center">

            <button type="submit" class="btn btn-primary mr-2">Add</button>

            <a class="mt-2" href="@Model.ReturnURL">Cancel</a>


        </div>
    </div>

}
@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }


    <script>

        $(document).ready(function () {
            $("#chkShipAwayBool").trigger("change");
        });

        $("#chkShipAwayBool").change(function () {
            if (this.checked) {
                $("#grpShipping").removeClass("d-none");
            }
            else {
                $("#grpShipping").addClass("d-none");
            }
        });

    </script>
}



