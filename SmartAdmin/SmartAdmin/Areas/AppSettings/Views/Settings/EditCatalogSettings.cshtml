@model CatalogSettings
@{
    ViewData["Title"] = "Edit Catalog Settings";

    ViewBag.SettingActive = "menuitem-active";
    ViewBag.SettingShowActive = "show";
    ViewBag.AppSettingsActive = "active";
}

<!-- start page title -->
<div class="row">
    <div class="col-12">
        <div class="page-title-box">
            <h4 class="page-title">@ViewData["Title"]</h4>
        </div>
    </div>
</div>
<!-- end page title -->
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="row">
        <div class="col-md-6 grid-margin stretch-card">
            <div class="card">
                <div class="card-body">


                    <div class="form-check form-check-flat form-check-primary">
                        <label class="form-check-label">
                            @Html.CheckBoxFor(model => model.cat_RestrictUpdateBool, new { htmlAttributes = new { @class = "form-check-input" } })
                            Restrict updating catelogue from SmartAdmin
                        </label>
                    </div>

                    <div class="form-check form-check-flat form-check-primary">
                        <label class="form-check-label">
                            @Html.CheckBoxFor(model => model.cat_ItemNameDuplicateAllowBool, new { htmlAttributes = new { @class = "form-check-input" } })
                            Allow using the same item name for many item
                        </label>
                    </div>
                    
                    <div class="form-group row">
                        @Html.LabelFor(model => model.cat_ImageSizeWidth, htmlAttributes: new { @class = "col-4 col-form-label" })
                        <div class="col-md-5">
                            @Html.EditorFor(model => model.cat_ImageSizeWidth, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.cat_ImageSizeWidth, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.cat_ImageSizeHeight, htmlAttributes: new { @class = "col-4 col-form-label" })
                        <div class="col-md-5">
                            @Html.EditorFor(model => model.cat_ImageSizeHeight, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.cat_ImageSizeHeight, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        <div class="col-4">
                        </div>
                        <div class="col-8">
                            <button type="submit" class="btn btn-primary mr-2">Save</button>
                            &nbsp;
                            <a href="@Url.Action("Index","Settings", new { Area = "AppSettings" })">Cancel</a>
                        </div>
                    </div>


                </div>
            </div>
        </div>
    </div>

}
@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }

    <script>


    </script>

}

