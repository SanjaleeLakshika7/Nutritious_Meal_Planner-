@model LoginView

@inject DropDown.IPageMetaTag TagManager
@{

    var URL = TagManager.GetURL();
}

@section MetaContent{

    <title>Forgot Password - nutriplanner.softwareengineer.lk</title>
    <meta name="description" content="Forgot Password for nutriplanner.softwareengineer.lk Customer">
    <meta name="keywords" content="Forgot Password">

    <meta name="og:url" content="@URL">
    <meta name="og:type" content="website">
    <meta name="og:title" content="Forgot Password - nutriplanner.softwareengineer.lk">
    <meta name="og:description" content="Forgot Password for nutriplanner.softwareengineer.lk Customer">
    <meta name="og:image" content="">
}




<div class="page-content pt-2 pb-4">
    <div class="container mt-1">

        <div class="login-popup">
            <div class="col-lg-12 mb-6 ">
                <h4 class="title-simple text-center">We can send password reset link to your email..</h4>
                <div class="alert alert-danger alert-dark alert-round alert-inline @(ViewData["ErrorMessage"] == null ? "d-none" : "")">
                    @(ViewData["ErrorMessage"])
                </div>
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="row form-group">
                        <div class="mt-2">
                            @Html.LabelFor(model => model.LoginEmail, htmlAttributes: new { @class = "" })
                            @Html.EditorFor(model => model.LoginEmail, new { htmlAttributes = new { @class = "form-control", autofocus = "autofocus" } })
                            @Html.ValidationMessageFor(model => model.LoginEmail, "", new { @class = "text-danger" })
                        </div>

                    </div>

                    <button class="btn btn-dark btn-block btn-rounded mt-2" type="submit">Recover</button>

                }
            </div>
        </div>

    </div>
</div>

@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }

    <script>

    </script>

}
